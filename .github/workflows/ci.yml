name: continuous-integration

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  schedule:
    - cron: '0 8 * * 2'

jobs:
  codeql-analyze:
    name: CodeQL analysis
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        language: ['javascript']

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v1
      with:
        languages: ${{ matrix.language }}

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v1

  anchore-scan:
    name: Anchore scan image
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Build image
      uses: docker/build-push-action@v2
      with:
        file: ./Dockerfile
        tags: hugo19941994/ovpn:latest
        push: false
        load: true

    - name: Scan image
      uses: anchore/scan-action@v2
      with:
        image: hugo19941994/ovpn:latest
        acs-report-enable: true

    - name: upload Anchore scan SARIF report
      uses: github/codeql-action/upload-sarif@v1
      with:
        sarif_file: results.sarif

  test:
    name: Build and lint
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: npm install, build, and test
      run: |
        npm ci
        #npm run lint
      env:
        CI: true
